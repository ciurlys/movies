@using Movies.EntityModels
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

    @if (Model != null && Model.Count != 0) 
    {
	<h2 class="comments-header" data-movie-id="@Model[0].MovieId">Comments</h2>

    @foreach (Comment comment in Model)
    {
        @if (comment.IsSeen || comment.UserId == UserManager.GetUserId(User))
        {
            <div class="card mb-3" style="opacity: 0.85;">
                <div class="card-body">
                    <h5 class="card-title">@comment.Title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@((await UserManager.FindByIdAsync(comment.UserId!))?.UserName)</h6>
                    <div class="comment" data-comment-id="@comment.CommentId">
                        <p class="card-text">@comment.Description</p>
                    </div>
                    @if (comment.UserId == UserManager.GetUserId(User))
			{
                    <a class="btn btn-primary" asp-controller="Comment" asp-action="EditComment" asp-route-id="@comment.CommentId">Edit</a>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@comment.CommentId">Delete</button>
                    }
                </div>
            </div>
		    }
		    else
		    {
            <div class="card mb-3" style="opacity: 0.85;">
                <div class="card-body">
                    <h5 class="card-title">@comment.Title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@((await UserManager.FindByIdAsync(comment.UserId!))?.UserName)</h6>
                    <div class="comment" data-comment-id="@comment.CommentId">
                        <p class="card-text">@comment.Description</p>
                    </div>
                    @if (comment.UserId == UserManager.GetUserId(User))
			{
                    <a class="btn btn-primary" asp-controller="Comment" asp-action="EditComment" asp-route-id="@comment.CommentId">Edit</a>
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@comment.CommentId">Delete</button>
                    }
		    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
			New
		    </span>

                </div>
            </div>
		    }
		    }
		    }
		    else
		    {
	    <p>No comments.</p>
		    }

	    @* HTML MODAL FOR DELETION *@
	    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
		<div class="modal-dialog" style="color:black;">
		    <div class="modal-content">
			<div class="modal-header">
			    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
			    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
			    Are you sure you want to delete this comment?
			</div>
			<div class="modal-footer">
			    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
			    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
			</div>
		    </div>
		</div>
	    </div>

	    @* JAVASCRIPT FOR DELETION *@
	    <script defer>
	     let commentIdToDelete;
	     document.querySelectorAll('button[data-bs-toggle="modal"]').forEach(button => {
		 button.addEventListener('click', function () {
		     commentIdToDelete = this.getAttribute('data-id');
             });
	     });
	     document.getElementById('confirmDelete').addEventListener('click', function () {
		 if (commentIdToDelete) {
		     fetch(`/Comment/DeleteComment/${commentIdToDelete}`, {
			 method: 'DELETE',
			 headers: { 'X-Requested-With': 'XMLHttpRequest' }
             })
			 .then(response => {
			     if (response.ok) {
				 location.reload();
             } else {
                 alert('Failed to delete the comment.');
             }
             })
			 .catch(error => console.error('Error:', error));
             }
	     });
	    </script>

	    @* JAVASCRIPT FOR MARKING UNREAD COMMENTS *@
	    <script defer>
	     const movieId = document.querySelector('.comments-header')?.getAttribute('data-movie-id');
	     if (movieId) {
		 fetch(`/Comment/MarkCommentsAsRead?movieId=${movieId}`)
		     .then(response => response.json())
		     .then(readCount => {
			 console.info(`${readCount} entries marked as read.`);
             });
	     }
	    </script>

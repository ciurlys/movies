@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Movies.Mvc.Models.HomeMoviesViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@using Movies.EntityModels;
<div class="row">
    <h1 class="display-2">Movies</h1>


    @if (await UserManager.IsInRoleAsync(await UserManager.FindByNameAsync(User.Identity.Name), "Administrators"))
    {
        <a href="/Home/AddMovie" class="btn btn-primary">Add a movie</a>
    }

    @* search by title *@

    <form method="get" asp-controller="Home" asp-action="Movies" >
        <input type="text" name="title"  value="@ViewContext.HttpContext.Request.Query["title"]"/>
        <input type="submit">
    </form>


    @* only show seen movies *@
    <form method="get" asp-controller="Home" asp-action="Movies">
        @if (@ViewContext.HttpContext.Request.Query["onlySeen"] == "t"
            || @ViewContext.HttpContext.Session.GetString("onlySeen") == "t"){
            <button type="submit" class="btn btn-primary" name="onlySeen" value="f">
                Show all movies
            </button>
        }    
        else
        {

            <button type="submit" class="btn btn-primary" name="onlySeen" value="t">
                Show only seen movies
            </button>
        }
    
    </form>


    <table class="table">
        <thead class="thead-inverse">
            <tr>
                <th>Title</th>
                <th>Cover image</th>
                <th>Director</th>
                <th>Release Date</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Movies is not null)
            {
                @foreach (Movie movie in Model.Movies)
                {
                    <tr>
                        <td>@movie.Title</td>
                        <td>@if (!string.IsNullOrWhiteSpace(movie.ImagePath))
                        {
                <img src="~/covers/@movie.ImagePath" alt="@movie.Title cover" style="max-width: 100px;" />
                        }
                        else
                        {
                <img src="~/covers/missing.jpg" alt="no cover" style="max-width: 100px;" />
                        }
                        </td>
                        <td>@movie.Director</td>
                        <td>@movie.ReleaseDate.Year</td>
                        <td>@movie.Description</td>
                        <td>
                        
                            <a class="btn btn-success" data-bs-toggle="comment" data-id="@movie.MovieId" asp-controller="Comment" asp-action="AddComment" asp-route-id="@movie.MovieId">Comment</a>
                        @if (await UserManager.IsInRoleAsync(await UserManager.FindByNameAsync(User.Identity.Name), "Administrators")){
                            <a class="btn btn-primary" asp-controller="Home" asp-action="EditMovie" asp-route-id="@movie.MovieId">Edit</a>
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@movie.MovieId">Delete</button>
                        }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>    

@* PAGES *@
<div>
    @for (int i = 0; i < (int)ViewData["PageCount"]; i++)
    {
        @* <a href="/Home/Movies/?onlySeen=@ViewData["onlySeen"]&title=@ViewContext.HttpContext.Request.Query["title"]&page=@i">@(i + 1)</a> *@
        <a class="btn btn-light" href="/Home/Movies/?page=@i">@(i + 1)</a>
    
    }
</div>

@*HTML MODAL FOR DELETION*@
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this movie?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>
@*JAVASCRIPT FOR DELETION*@
<script>
    let movieIdToDelete;

    document.querySelectorAll('button[data-bs-toggle="modal"]').forEach(button => {
        button.addEventListener('click', function () {
            movieIdToDelete = this.getAttribute('data-id');
        });
    });

    document.getElementById('confirmDelete').addEventListener('click', function () {
        if (movieIdToDelete) {
            fetch(`/Home/DeleteMovie/${movieIdToDelete}`, {
                method: 'DELETE',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (response.ok) {
                    location.reload(); 
                } else {
                    alert('Failed to delete the movie.');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    });
</script>
<script src="~/js/comments.js" defer></script>
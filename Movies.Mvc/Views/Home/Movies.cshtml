@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Movies.Mvc.Models.HomeMoviesViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@using Movies.EntityModels;
@{
    var user = await UserManager.FindByNameAsync(User.Identity!.Name!);
    var isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Administrators");
}

    
    <div class="row">
	<h1 class="display-2">Movies</h1>

	<div class="container">
	    <div class="row">
		<div class="row text-center align-items-center">
		    <div class="col-sm">
	@if (isAdmin)
	{
        <a href="/Home/AddMovie" class="btn btn-primary">Add a movie</a>
	}
		</div>
	@* search by title *@

	<div class="col-sm">
	<form method="get" asp-controller="Home" asp-action="Movies" >
            <input type="text" name="title" value='@ViewContext.HttpContext.Request.Query["title"]'/>
	    <input type="hidden" name="onlySeen" value='@ViewContext.HttpContext.Request.Query["onlySeen"]'/>
            <input type="submit" class="btn btn-primary" value="Search" />
	</form>
	</div>
	
	@* only show seen movies *@
	<div class="col-sm">
	<form method="get" asp-controller="Home" asp-action="Movies">
            @if (ViewData["onlySeen"] != null && (bool)ViewData["onlySeen"]! == true){
		<button type="submit" class="btn btn-primary" onclick="setOnlySeen(event)" name="onlySeen">
		Show all movies
		</button>
            }    
            else
            {

		<button type="submit" class="btn btn-primary" onclick="setOnlySeen(event)" name="onlySeen">
		Show only seen movies
		</button>
            }	    
	</form>
	</div>
	    </div>
	</div>
    </div>
    </div>

	<div class="container">
	    <div class="row row-cols-1 row-cols-md-3 g-5 justify-content-center">
		@if (Model.Movies is not null)
		{
		@foreach (Movie movie in Model.Movies)
		{
                <div class="col d-flex justify-content-center">
                    <div class="card h-100 shadow-sm p-2" style="max-width: 18rem;">
                        <div class="d-flex justify-content-center p-3">
                            <img class="card-img-top" src="~/covers/@(string.IsNullOrWhiteSpace(movie.ImagePath) ? "missing.jpg" : movie.ImagePath)" 
                                 alt="@movie.Title cover" />
                        </div>

                        <div class="card-body">
                            <h6 class="card-title text-center fw-bold">@movie.Title</h6>
                            <p class="card-text text-muted text-center">@movie.Director</p>
                            <p class="card-text small text-muted text-center">@movie.ReleaseDate.Year</p>
                            <div class="text-center mt-2">
                                @if (movie.UnreadCommentCount == 0)
                                {
                                    <a class="btn btn-success btn-sm" data-bs-toggle="comment" data-id="@movie.MovieId" 
                                       asp-controller="Comment" asp-action="AddComment" asp-route-id="@movie.MovieId">Comment</a>
                                       }
                                       else
                                       {
                                    <a class="btn btn-warning btn-sm" data-bs-toggle="comment" data-id="@movie.MovieId" 
                                       asp-controller="Comment" asp-action="AddComment" asp-route-id="@movie.MovieId">
                                        Comment (@movie.UnreadCommentCount)
                                    </a>
					}

                                    @if (isAdmin)
					{
                                    <a class="btn btn-primary btn-sm" asp-controller="Home" asp-action="EditMovie" 
                                       asp-route-id="@movie.MovieId">Edit</a>

                                    <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal" 
                                            data-id="@movie.MovieId">Delete</button>
					    }
                            </div>
                        </div> 
                    </div> 
                </div> 
					    }
					    }
	    </div> 
	</div>

	@* PAGES *@
    <div>
	@for (int i = 0; i < (int)ViewData["PageCount"]!; i++)
	{
	<a class="btn btn-primary" href="/Home/Movies/?onlySeen=@ViewData["onlySeen"]&title=@ViewContext.HttpContext.Request.Query["title"]&page=@i">@(i + 1)</a>

	}
    </div>


    
    @*HTML MODAL FOR DELETION*@
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog" style="color: black;">
            <div class="modal-content">
		<div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		</div>
		<div class="modal-body">
                    Are you sure you want to delete this movie?
		</div>
		<div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
		</div>
            </div>
	</div>
    </div>
    @*JAVASCRIPT FOR DELETION*@
    <script>
     let movieIdToDelete;

     document.querySelectorAll('button[data-bs-toggle="modal"]').forEach(button => {
         button.addEventListener('click', function () {
             movieIdToDelete = this.getAttribute('data-id');
     });
     });

     document.getElementById('confirmDelete').addEventListener('click', function () {
         if (movieIdToDelete) {
             fetch(`/Home/DeleteMovie/${movieIdToDelete}`, {
                 method: 'DELETE',
                 headers: {
                     'X-Requested-With': 'XMLHttpRequest'
     }
     })
		 .then(response => {
                     if (response.ok) {
			 location.reload(); 
     } else {
         alert('Failed to delete the movie.');
     }
     })
		 .catch(error => console.error('Error:', error));
     }
     });
    </script>

    
    <script>   
     function setOnlySeen(event) {
	 event.preventDefault();
	 
	 var onlySeen = JSON.parse(localStorage.getItem("onlySeen") ?? true);		 
	 onlySeen = !onlySeen;
	 
	 localStorage.setItem("onlySeen", JSON.stringify(onlySeen)); 
	 window.location.href = `/home/movies?onlySeen=${onlySeen}`;
     }
    </script>
    <style>
     body{
	 background-image: url('../../assets/Ruins-of-the-Parthenon.jpg') !important;
	 background-size: cover;
	 background-position: center center;
	 background-attachment: fixed;
	 height: 100vh;
	 margin: 0;
     }

     h1{
	 text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
     }
    </style>

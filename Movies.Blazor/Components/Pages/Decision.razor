@page "/decision"
@inject MoviesDataContext db
@using Microsoft.EntityFrameworkCore
@if (CurrentWinnerDate is not null)
{
<h1>Current date: @(CurrentWinnerDate?.ToString("MMMM dd - HH:mm") ?? "No date available")</h1>

    <table class="table">
        <thead class="thead-inverse">
            <tr>
                <th>Title</th>
                <th>Cover image</th>
                <th>Director</th>
                <th>Release Date</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @if (CurrentWinnerMovie is not null)
            {

                    <tr>
                        <td>@CurrentWinnerMovie.Title</td>
                        <td>@if (!string.IsNullOrWhiteSpace(CurrentWinnerMovie.ImagePath))
                        {
                <img src="~/covers/@CurrentWinnerMovie.ImagePath" alt="@CurrentWinnerMovie.Title cover" style="max-width: 100px;" />
                        }
                        else
                        {
                <img src="~/covers/missing.jpg" alt="no cover" style="max-width: 100px;" />
                        }
                        </td>
                        <td>@CurrentWinnerMovie.Director</td>
                        <td>@CurrentWinnerMovie.ReleaseDate.Year</td>
                        <td>@CurrentWinnerMovie.Description</td>
                    </tr>

            }
	    else
	    {
		<tr><td>NO MOVIES</td></tr>
	    }
        </tbody>
    </table>
}
else
{
<h1>No date set</h1>
}
@code{
	private DateTime? CurrentWinnerDate { get; set; }
	private Movie CurrentWinnerMovie { get; set; }

	protected override async Task OnInitializedAsync()
	{
		
		var topDate = await db.Dates
		     .OrderByDescending(d => d.Votes)
		     .ThenBy(d => d.ProposedDate)
		     .FirstOrDefaultAsync();

		if (topDate is not null)
		{
		CurrentWinnerDate = topDate.ProposedDate;
		
		CurrentWinnerMovie = await db.Movies
		    .OrderByDescending(m => m.Votes)
		    .ThenBy(m => m.Title)
		    .FirstOrDefaultAsync();
		    
		if (DateTime.Now > CurrentWinnerDate && CurrentWinnerMovie is not null)
		{
			CurrentWinnerMovie.Seen = true;
			db.Movies.Update(CurrentWinnerMovie);
			db.Dates.RemoveRange(db.Dates);
			
			await db.SaveChangesAsync();
		}

		}
        }

}